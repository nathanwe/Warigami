# DO NOT EDIT ON GITLAB
# This file is a template, and might need editing before it works on your project.
# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
image: gcc

build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  before_script:
    - apt-get update
    - apt-get install -y libxrandr-dev
    - apt-get install -y libxinerama-dev
    - apt-get install -y libxcursor-dev
    - apt-get install -y libxi-dev
    - apt-get install -y xinput
    - apt-get install -y libxcb-xinput-dev
    - apt-get install -y libglu1-mesa-dev freeglut3-dev mesa-common-dev
    - DEBIAN_FRONTEND=noninteractive apt-get install -y joystick jstest-gtk xserver-xorg-input-joystick xserver-xorg-input-joystick-dev 
   
  script:
    - mkdir build
    - pushd build
    - cmake ..
    - make -j2 game
    - make -j2 demo
    - make -j2 ecs_tests
    - make -j2 asset_tests
    - make -j2 audio_tests

  #artifacts:
   # paths:
    #  - mybinary
      # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
      # cache:
      #   paths:
      #     - "*.o"

# run tests using the binary built before
test:
  stage: test
  script:
    - echo dumy_testing
